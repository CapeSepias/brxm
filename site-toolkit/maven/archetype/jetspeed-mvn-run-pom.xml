<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>maven</artifactId>
    <groupId>org.onehippo.ecm.hst</groupId>
    <version>2.02.05-SNAPSHOT</version>
    <relativePath>..</relativePath>
  </parent>

  <name>Hippo Site Toolkit Archetype</name>
  <description>Hippo Site Toolkit Archetype</description>
  <groupId>org.onehippo.ecm.hst</groupId>
  <artifactId>hst-archetype</artifactId>
  <packaging>pom</packaging>

  <properties>
    <example.app.groupId>org.onehippo.ecm.hst</example.app.groupId>
    <example.app.artifactId>gettingstarted</example.app.artifactId>
    <example.app.version>${pom.version}</example.app.version>
    <example.app.repository.address>rmi://127.0.0.1:1099/hipporepository</example.app.repository.address>
    <example.app.repository.username>admin</example.app.repository.username>
    <example.app.repository.password>admin</example.app.repository.password>
  </properties>
  
  <build>
    <defaultGoal>process-resources</defaultGoal>
  </build>

  <profiles>
    <profile>
      <id>run-war</id>
      <build>
        <defaultGoal>initialize</defaultGoal>
        <plugins>
          <plugin>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-antrun-plugin</artifactId>
		    <version>1.2</version>
		    <executions>
		      <execution>
		        <id>run</id>
		        <phase>initialize</phase>
		        <configuration>
		          <tasks>
		          
                    <property name="example.app.groupId" value="${example.app.groupId}" />
                    <property name="example.app.artifactId" value="${example.app.artifactId}" />
                    <property name="example.app.version" value="${example.app.version}" />
                    <property name="example.app.repository.address" value="${example.app.repository.address}" />
                    <property name="example.app.repository.username" value="${example.app.repository.username}" />
                    <property name="example.app.repository.password" value="${example.app.repository.password}" />
                  
		            <taskdef name="groovy" classname="org.codehaus.groovy.ant.Groovy">
		              <classpath refid="maven.compile.classpath"/>
		            </taskdef>
		            
	                <echo message="$$$$$$$$$$ Installing this archetype $$$$$$$$$$" />
	                <java classname="org.codehaus.classworlds.Launcher" dir="${basedir}" fork="true" failonerror="true">
	                  <permissions>
	                    <grant class="java.security.AllPermission"/>
	                    <grant class="java.io.FilePermission" name="${maven.home}/bin/m2.conf" actions="read" />
	                    <grant class="java.util.PropertyPermission" name="*" actions="read,write"/>
	                  </permissions>
	                  <sysproperty key="classworlds.conf" value="${maven.home}/bin/m2.conf" />
	                  <sysproperty key="maven.home" value="${maven.home}" />
	                  <classpath>
	                    <fileset dir="${maven.home}/boot">
	                      <include name="**/*.jar"/>
	                    </fileset>
	                  </classpath>
	                  <arg value="clean" />
	                  <arg value="install" />
	                </java>
	                
	                <echo message="$$$$$$$$$$ Generating an example HST application from the archetype $$$$$$$$$$" />
	                <java classname="org.codehaus.classworlds.Launcher" dir="${basedir}/target" fork="true" failonerror="true">
	                  <permissions>
	                    <grant class="java.security.AllPermission"/>
	                    <grant class="java.io.FilePermission" name="${maven.home}/bin/m2.conf" actions="read" />
	                    <grant class="java.util.PropertyPermission" name="*" actions="read,write"/>
	                  </permissions>
	                  <sysproperty key="classworlds.conf" value="${maven.home}/bin/m2.conf" />
	                  <sysproperty key="maven.home" value="${maven.home}" />
	                  <classpath>
	                    <fileset dir="${maven.home}/boot">
	                      <include name="**/*.jar"/>
	                    </fileset>
	                  </classpath>
	                  <arg value="archetype:generate" />
	                  <arg value="-DarchetypeGroupId=org.onehippo.ecm.hst" />
	                  <arg value="-DarchetypeArtifactId=hst-archetype" />
	                  <arg value="-DarchetypeVersion=${pom.version}" />
	                  <arg value="-Dversion=${example.app.version}" />
	                  <arg value="-DgroupId=${example.app.groupId}" />
	                  <arg value="-DartifactId=${example.app.artifactId}" />
	                </java>
	                
	                <echo message="$$$$$$$$$$ Packaging an example HST application from the archetype $$$$$$$$$$" />
	                <java classname="org.codehaus.classworlds.Launcher" dir="${basedir}/target/${example.app.artifactId}" fork="true" failonerror="true">
	                  <permissions>
	                    <grant class="java.security.AllPermission"/>
	                    <grant class="java.io.FilePermission" name="${maven.home}/bin/m2.conf" actions="read" />
	                    <grant class="java.util.PropertyPermission" name="*" actions="read,write"/>
	                  </permissions>
	                  <sysproperty key="classworlds.conf" value="${maven.home}/bin/m2.conf" />
	                  <sysproperty key="maven.home" value="${maven.home}" />
	                  <classpath>
	                    <fileset dir="${maven.home}/boot">
	                      <include name="**/*.jar"/>
	                    </fileset>
	                  </classpath>
	                  <arg value="install" />
	                </java>

	                <echo message="$$$$$$$$$$ Running an example Hippo Repository $$$$$$$$$$" />
	                <java classname="org.codehaus.classworlds.Launcher" dir="${basedir}/target/${example.app.artifactId}/cms" fork="true" spawn="true">
	                  <permissions>
	                    <grant class="java.security.AllPermission"/>
	                    <grant class="java.io.FilePermission" name="${maven.home}/bin/m2.conf" actions="read" />
	                    <grant class="java.util.PropertyPermission" name="*" actions="read,write"/>
	                  </permissions>
	                  <sysproperty key="classworlds.conf" value="${maven.home}/bin/m2.conf" />
	                  <sysproperty key="maven.home" value="${maven.home}" />
	                  <classpath>
	                    <fileset dir="${maven.home}/boot">
	                      <include name="**/*.jar"/>
	                    </fileset>
	                  </classpath>
	                  <arg value="jetty:run-war" />
	                </java>
	                
	                <groovy src="CheckRepositoryRunning.groovy">
  	                  <classpath refid="maven.compile.classpath"/>
	                </groovy>
	                
		          </tasks>
		        </configuration>
		        <goals>
		          <goal>run</goal>
		        </goals>
		      </execution>
		    </executions>
	        <dependencies>
	          <dependency>
	            <groupId>org.codehaus.groovy</groupId>
	            <artifactId>groovy</artifactId>
	            <version>1.5.7</version>
	          </dependency>
              <dependency>
                <groupId>org.apache.geronimo.specs</groupId>
                <artifactId>geronimo-jta_1.1_spec</artifactId>
                <scope>provided</scope>
                <version>1.1</version>
              </dependency>
              <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.4.2</version>
              </dependency>
              <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>1.4.2</version>
              </dependency>
              <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.13</version>
              </dependency>
              <dependency>
                <groupId>org.hippoecm</groupId>
                <artifactId>hippo-ecm-repository-connector</artifactId>
                <version>${hippoecm.version}</version>
              </dependency>
	        </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>stop-jetty</id>
      <build>
        <defaultGoal>verify</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.2</version>
            <executions>
              <execution>
                <id>run</id>
                <phase>verify</phase>
                <configuration>
                  <tasks>
                  
                    <property name="example.app.groupId" value="${example.app.groupId}" />
                    <property name="example.app.artifactId" value="${example.app.artifactId}" />
                    <property name="example.app.version" value="${example.app.version}" />
                    <property name="example.app.repository.address" value="${example.app.repository.address}" />
                    <property name="example.app.repository.username" value="${example.app.repository.username}" />
                    <property name="example.app.repository.password" value="${example.app.repository.password}" />
                    
                    <echo message="$$$$$$$$$$ Stopping the example Hippo Repository $$$$$$$$$$" />
                    <java classname="org.codehaus.classworlds.Launcher" dir="${basedir}/target/${example.app.artifactId}/cms" fork="true" spawn="true">
                      <permissions>
                        <grant class="java.security.AllPermission"/>
                        <grant class="java.io.FilePermission" name="${maven.home}/bin/m2.conf" actions="read" />
                        <grant class="java.util.PropertyPermission" name="*" actions="read,write"/>
                      </permissions>
                      <sysproperty key="classworlds.conf" value="${maven.home}/bin/m2.conf" />
                      <sysproperty key="maven.home" value="${maven.home}" />
                      <classpath>
                        <fileset dir="${maven.home}/boot">
                          <include name="**/*.jar"/>
                        </fileset>
                      </classpath>
                      <arg value="jetty:stop" />
                    </java>
                    
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy</artifactId>
                <version>1.5.7</version>
              </dependency>
              <dependency>
                <groupId>org.apache.geronimo.specs</groupId>
                <artifactId>geronimo-jta_1.1_spec</artifactId>
                <scope>provided</scope>
                <version>1.1</version>
              </dependency>
              <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.4.2</version>
              </dependency>
              <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>1.4.2</version>
              </dependency>
              <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.13</version>
              </dependency>
              <dependency>
                <groupId>org.hippoecm</groupId>
                <artifactId>hippo-ecm-repository-connector</artifactId>
                <version>${hippoecm.version}</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
