/*
 *  Copyright 2008 Hippo.
 * 
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 * 
 *       http://www.apache.org/licenses/LICENSE-2.0
 * 
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.hippoecm.hst.core.container;

import java.util.Collection;

import org.hippoecm.hst.configuration.components.HstComponentInfo;
import org.hippoecm.hst.core.component.HstComponentException;
import org.hippoecm.hst.core.component.HstRequest;
import org.hippoecm.hst.core.component.HstResponse;
import org.hippoecm.hst.util.KeyValue;

/**
 * PageErrorHandler
 * <P>
 * When a valve meets component errors, error handling can be delegated to a PageErrorHandler.
 * </P>
 * 
 * @version $Id$
 */
public interface PageErrorHandler {
    
    /**
     * Value to return to stop the processing.
     */
    Object HANDLED_TO_STOP = null;
    
    /**
     * Value to return to continue the processing, indicating no handling happened.
     */
    Object NOT_HANDLED_TO_CONTINUE = new Object();
    
    /**
     * Value to return to continue the processing, indicating some handling happened.
     */
    Object HANDLED_BUT_CONTINUE = new Object();
    
    /**
     * Handles the exceptions generated by components.
     * <P>
     * An implementation should be aware of the current lifecycle phase by invoking {@link HstRequest#getLifecyclePhase()} method
     * if it wants to invoke some lifecycle dependent operations such as {@link HstResponse#forward(String)} or {@link HstResponse#sendRedirect(String)}.
     * </P>
     * 
     * @param componentExceptionPairs collection of component info and exception collection pair, ordered by the component hierarchy. 
     * @param hstRequest
     * @param hstResponse
     * @return
     */
    Object handleComponentExceptions(Collection<KeyValue<HstComponentInfo, Collection<HstComponentException>>> componentExceptionPairs, HstRequest hstRequest, HstResponse hstResponse);
    
}
