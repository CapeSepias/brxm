/*
 * Copyright 2017 Hippo B.V. (http://www.onehippo.com)
 */
pipeline {
    agent {
        docker {
            label 'docker'
            image 'ajbanck/buildcms:openjdk-8'
            registryUrl 'https://docker.io/'
            //customWorkspace "workspace/"
            args '--cap-add=SYS_ADMIN'
        }
    }
    environment {
        HOME = "${env.WORKSPACE}"
        MAVEN_SETTINGS_ID = 'org.jenkinsci.plugins.configfiles.maven.MavenSettingsConfig1412272376940'
        SLACK_CHANNEL = '#content-eng-turing'
        SLACK_CREDENTIALS = 'bloomreachslack'
    }
    options {
        buildDiscarder(logRotator(numToKeepStr:'10'))
        disableConcurrentBuilds()
        gitLabConnection('https://code.onehippo.org/')
        gitlabCommitStatus(name: 'jenkins')
        skipStagesAfterUnstable()
        timeout(time: 1, unit: 'HOURS')
        timestamps()
    }
    triggers {
        gitlab(triggerOnPush: true, triggerOnMergeRequest: true, branchFilterType: 'All')
    }

    stages {
        stage('Prepare') {
            steps {
                echo "=== Build Environment ================"
                sh "java -version && javac -version && node --version && mvn --version && google-chrome --version"
                echo "======================================"
                script {
                    if (currentBuild.number == 1 && !SLACK_CHANNEL.isEmpty()) {
                        slackSend channel: SLACK_CHANNEL, message: "CI New build job for ${env.BRANCH_NAME}: ${env.BUILD_URL}", tokenCredentialId: SLACK_CREDENTIALS
                   	}
                }
            }
        }
        stage('License Check') {
            steps {
                dir ('target/rat') {
                    checkout scm

                    withMaven(
                            mavenSettingsConfig: MAVEN_SETTINGS_ID,
                            options: [artifactsPublisher(disabled: true)]) {
                        sh "cd target/rat && mvn --non-recursive -B validate -Ppedantic -Dhippo.snapshots -Duser.home=${env.WORKSPACE}"
                    }
                }
            }
        }

        stage('Build') {
            steps {
                withMaven(
                        mavenSettingsConfig: MAVEN_SETTINGS_ID,
                        options: [artifactsPublisher(disabled: true),
                                  junitPublisher(ignoreAttachments: true)]) {
                    sh 'mvn clean verify -e -B -U -Dhippo.snapshots -Dsurefire.useFile=false -Dmaven.test.failure.ignore=true -DskipTests=true'
                }
            }
        }
    }
    post {
        unstable {
            slackSend channel: SLACK_CHANNEL, message: "CI ${currentBuild.currentResult}: ${env.BUILD_URL}", tokenCredentialId: SLACK_CREDENTIALS
        }
        failure {
            slackSend channel: SLACK_CHANNEL, message: "CI ${currentBuild.currentResult}: ${env.BUILD_URL}", tokenCredentialId: SLACK_CREDENTIALS
        }
    }
}
