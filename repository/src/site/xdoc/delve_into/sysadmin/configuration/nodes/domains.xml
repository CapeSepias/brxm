<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC
  "-//Apache Software Foundation//DTD XDOC 1.0//EN"
  "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<!--
  Copyright 2008 Hippo

  Licensed under the Apache License, Version 2.0 (the  "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS"
  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<document>
    <properties>
        <title>Domains Configuration</title>
    </properties>
    <body>
        <section name="Domains Configuration">
            <p>
                Domains define a subset of nodes from the repository and which users or groups
                have which role on the nodes in the domain. The domain are stored in the repository
                as childeren of the node <code>/hippo:configuration/hippo:domains</code>. The domain
                rule nodes and facet rule subnodes define the subset of nodes from the repository. The
                auth role nodes define who can do what in the domain.
            </p>
                <!-- TODO: add read more link to authorizaion and workflow "concepts" -->
        </section>
        <section name="Structure">
<source>
hippo:configuration
`-- hippo:domains
    `-- mydomain
        |-- mydomainruleA
        |   |-- myfacetruleA
        |   `-- myfacetruleB
        |-- mydomainruleB
        |   |-- myfacetruleC
        |   |-- myfacetruleD
        |   `-- myfacertuleE
        |-- mydomainruleC
        |   `-- myfacetruleF
        |-- hippo:authrole
        `-- hippo:authrole
 </source>
        </section>
        <section name="Nodes">
            <subsection name="hippo:domain">
<source>
&lt;sv:node sv:name="mydomain"&gt;
    &lt;sv:property sv:name="jcr:primaryType" sv:type="Name"&gt;
        &lt;sv:value&gt;hipposys:domain&lt;/sv:value&gt;
    &lt;/sv:property&gt;
&lt;/sv:node&gt;
</source>
            <table>
                <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
                <tr><td>node name</td><td>String</td><td>yes</td><td>the domain name</td></tr>
            </table>

            <p>
                The <code>hipposys:domain</code> can hold multiple <code>hipposys:domainrule</code> and <code>hipposys:authrole</code> nodes.
            </p>
            </subsection>
            <subsection name="hipposys:domainrule">
<source>
&lt;sv:node sv:name="mydomainruleA"&gt;
    &lt;sv:property sv:name="jcr:primaryType" sv:type="Name"&gt;
        &lt;sv:value&gt;hipposys:domainrule&lt;/sv:value&gt;
    &lt;/sv:property&gt;
&lt;/sv:node&gt;
</source>
            <table>
                <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
                <tr><td>node name</td><td>String</td><td>yes</td><td>hippo:domainrule</td></tr>
            </table>

            <p>
                The <code>hipposys:domainrule</code> can hold multiple <code>hipposys:facetrule</code> nodes.
            </p>
            </subsection>
            <subsection name="hippo:facetrule">
<source>
&lt;sv:node sv:name="myfacetruleA"&gt;
    &lt;sv:property sv:name="jcr:primaryType" sv:type="Name"&gt;
        &lt;sv:value&gt;hipposys:facetrule&lt;/sv:value&gt;
    &lt;/sv:property&gt;
    &lt;sv:property sv:name="hipposys:facet" sv:type="String"&gt;
        &lt;sv:value&gt;category&lt;/sv:value&gt;
    &lt;/sv:property&gt;
    &lt;sv:property sv:name="hipposys:value" sv:type="String"&gt;
        &lt;sv:value&gt;news&lt;/sv:value&gt;
    &lt;/sv:property&gt;
    &lt;sv:property sv:name="hipposys:type" sv:type="String"&gt;
        &lt;sv:value&gt;String&lt;/sv:value&gt;
    &lt;/sv:property&gt;
    &lt;sv:property sv:name="hipposys:equals" sv:type="Boolean"&gt;
        &lt;sv:value&gt;true&lt;/sv:value&gt;
    &lt;/sv:property&gt;
    &lt;sv:property sv:name="hipposys:filter" sv:type="Boolean"&gt;
        &lt;sv:value&gt;true&lt;/sv:value&gt;
    &lt;/sv:property&gt;
&lt;/sv:node&gt;
</source>
            <table>
                <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
                <tr><td>node name</td><td>String</td><td>yes</td><td>hipposys:facetrule</td></tr>
                <tr><td>hipposys:facet</td><td>String</td><td>yes</td><td>The name of the facet to match. A special value of
                <code>nodetype</code> can be set to check if a node if of a type, either it's primary type, an inherited type or
                a mixin type.</td></tr>
                <tr><td>hipposys:value</td><td>String</td><td>yes</td><td>The value of the facet to match. Four special values can be
                used:
                    <ul>
                        <li>* : match everything</li>
                        <li>__role__ : match the users role (for the domain)</li>
                        <li>__user__ : match the username</li>
                        <li>__group__ : match any of the user's groups</li>
                    </ul>
                </td></tr>
                <tr><td>hipposys:type</td><td>String</td><td>yes</td><td>The property type of the facet. Must be either
                String or Name.</td></tr>
                <tr><td>hipposys:equals</td><td>Boolean</td><td>yes</td><td>Whether the value must match or must <strong>not</strong>
                match. If a not match (false) is set the facet must exist on the node.</td></tr>
                <tr><td>hipposys:filter</td><td>Boolean</td><td>no</td><td>Whether the facet must exists to match. 
                If set to true the match is only tried if the facet does exists..

</td></tr>
            </table>
            </subsection>
            <subsection name="hipposys:authrole">
            <source>
&lt;sv:node sv:name="hippo:authrole"&gt;
    &lt;sv:property sv:name="jcr:primaryType" sv:type="Name"&gt;
        &lt;sv:value&gt;hippo:sysauthrole&lt;/sv:value&gt;
    &lt;/sv:property&gt;
    &lt;sv:property sv:name="hipposys:role" sv:type="String"&gt;
        &lt;sv:value&gt;editor&lt;/sv:value&gt;
    &lt;/sv:property&gt;
    &lt;sv:property sv:name="hipposys:users" sv:type="String"&gt;
        &lt;sv:value&gt;user1&lt;/sv:value&gt;
        &lt;sv:value&gt;editor&lt;/sv:value&gt;
        &lt;sv:value&gt;admin&lt;/sv:value&gt;
    &lt;/sv:property&gt;
    &lt;sv:property sv:name="hipposys:groups" sv:type="String"&gt;
        &lt;sv:value&gt;group1&lt;/sv:value&gt;
        &lt;sv:value&gt;mygroup&lt;/sv:value&gt;
    &lt;/sv:property&gt;
&lt;/sv:node&gt;
</source>
            <table>
                <tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr>
                <tr><td>node name</td><td>String</td><td>yes</td><td>hippo:authrole</td></tr>
                <tr><td>hipposys:role</td><td>String</td><td>yes</td><td>The role to assign to users or groups to the domain.</td></tr>
                <tr><td>hipposys:users</td><td>String</td><td>no</td><td>The users that have the role on the domain.</td></tr>
                <tr><td>hipposys:groups</td><td>String</td><td>no</td><td>The groups that have the role on the domain.</td></tr>
            </table>
            </subsection>

        </section>
    </body>
</document>
