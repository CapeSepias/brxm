<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC
  "-//Apache Software Foundation//DTD XDOC 1.0//EN"
  "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<!--
  Copyright 2007 Hippo

  Licensed under the Apache License, Version 2.0 (the  "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS"
  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<document>
    <properties>
        <title>in Application Server</title>
    </properties>
    <body>
        <section name="in Application Server">
          <span class='shortdesc'>Get Hippo CMS up and running in a Java <span class='index' id='application_server'>application server</span>.</span>

            <subsection name="Obtain the EAR package">
              <p>
                To deploy Hippo ECM in an application server, download the
                EAR package:
              </p>
<source>
  <a href='${quickstart_ear_url}'>Quickstart EAR</a>
</source>
<p>
The EAR package takes advantage of the extra possibilities of application servers (as compared to servlet containers).
</p>
</subsection>

            <subsection name="Application Server">
                <p>
                 Your application server is expected to be configured correctly and up and running.
                 Consult the instructions of the supplier of your application server. 
                </p>
                <p>
                  The procedure to deploy an EAR package in an application server is similar but 
                  slightly different for different application servers.
                  The procedure will be shown for a few application servers.
                  The differences are not due to Hippo ECM, so if you have an other application server,
                  consult its documentation.   
                </p>
            </subsection>

            <subsection name="Deploying in Glassfish">
                <p>                   
                  Go to the administration console of your <a href="https://glassfish.dev.java.net/"><span class='index' id='glassfish'>GlassFish</span></a>
                  installation, once glassfish is running,
                  by accessing the following URL in your browser on the machine that runs the GlassFish
                  instance:
                </p>
<source>
http://localhost:4848/
</source>
    <p>
      Login using the username and password of the administrator you had selected during
      installation (default username is <code>admin</code> and default password is
      <code>adminadmin</code>.
    </p>
    <p>
     Select in the left pane &quot;Enterprise applications&quot;
				</p>
				<span class='rewrite'>Replace 2 bad resolution screenshots</span>
    <div class='screenshot'>
					<img src="../../../images/glassfish1.gif" alt=""/>
			 </div>
    <p>
      Then in the main pane select the button &quot;Deploy&quot;
    </p>
    <p>
      When the page has loaded make sure the &quot;Packaged file to be uploaded to the
      server&quot; is checked and use the browse button to select the build or downloaded EAR file
      of Hippo ECM.  Then just choose &quot;Ok&quot; to perform the deployment.
				</p>
				<div class='screenshot'>
					<img src="../../../images/glassfish2.gif" alt=""/>
				</div>	
    <p>
      Once the server has finished, the application is now available on your server on the
      configured hostname and portname, which is by default:
    </p>
<source>
http://localhost:8080/
</source>
                <p>
                  The EAR contains both Hippo CMS and Hippo Repository.  You can also install
                  individual WARs, or multiple EARs within each EAR only a repository or only a CMS.  This is
                  a more advanced setup which is supported but requires a custom packaging.
                </p>
            
              <h4>Integration Glassfish and NetBeans</h4>
                <p>
                  NetBeans can be installed with an integrated installation of the production quality
                  application server Glassfish.  This allows you to directly start and deploy to Glassfish
                  from within NetBeans.  To use this, simply select the project &quot;EAR packaging&quot; from
                  the project windows.  When you right-click this sub-project you can select &quot;run&quot;
                  to deploy the EAR once you have build the entire project.
                </p>
                <p>
                  Use the &quot;Services&quot; window to inspect and undeploy the application through
                  <code>Servers -> GlassFish V2 -> Applications -> Enterprise Applications</code>.
																		<span class='rewrite'>formating small piece of code, differently.
																        		Is not realy code.</span>
                </p>

              <h4>Glassfish and Ubuntu</h4>
                <span class='expires'>
                The <a href='http://packages.ubuntu.com/hardy/glassfishv2'>Ubuntu package Glassfish V2</a> 
                works, but only if dpkg-reconfigure is never used on the package, as the package 
                contains a 
                 <a href='https://bugs.launchpad.net/ubuntu/+source/glassfishv2/+bug/257362'>severe bug with respect to this command</a>. 
                 </span>
            </subsection>

            <subsection name="Deploying in JBoss">
              <p>
                To deploy Hippo Repository in <span class='index' id='jboss'>JBoss</span> the port number of the repository-address context parameter has to be adjusted.
              </p>
<source>
&lt;context-param&gt;
 &lt;param-name&gt;repository-address&lt;/param-name&gt;
 &lt;param-value&gt;rmi://localhost:1099/hipporepository&lt;/param-value&gt;
 &lt;description&gt;The address of the repository&lt;/description&gt;
&lt;/context-param&gt;
</source>
              <p>
                JBoss by default already starts a service on port 1099. Change the port number to a free port number.
              </p>
            </subsection>

        </section>
    </body>
</document>
