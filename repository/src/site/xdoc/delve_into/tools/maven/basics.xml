<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC
  "-//Apache Software Foundation//DTD XDOC 1.0//EN"
  "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<!--
  Copyright 2009 Hippo

  Licensed under the Apache License, Version 2.0 (the  "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS"
  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<document>
    <properties>
      <title>Maven basics</title>
    </properties>
    <body>
      <section name="Maven basics">
        <span class="shortdesc">Learn to basics of maven: pom.xml and mvn clean install.</span>

        <p>
         The tiny pom.xml below is for a project named 'Editing Template Add-on'.
         The package created by the project will be a jar (it could also be a war or an ear).
         The version of the project is 0.01.00 (that is, just starting).
         The project has no dependencies.
        </p>

<source><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <name>Editing Template Add-on</name>
  <description>A package for adding predefined document types to a repository.</description>
  <groupId>org.example</groupId>
  <artifactId>editing-template-addon</artifactId>
  <version>0.01.00</version>
  <packaging>jar</packaging>

</project>
]]></source>

<p>
 You can place this pom in an empty folder, e.g. ~/myaddon.
 Assuming that you have <a href='install_maven.html'>installed maven</a> 
 you can now run:
</p>
<source>
cd ~/myaddon
mvn install
</source>

<p>A target subfolder will be created. This contains a jar package and some
 logs:
</p>

<source>
|-- pom.xml
`-- target
    |-- editing-template-addon-0.01.00.jar
    `-- maven-archiver
        `-- pom.properties
</source>

<p>
 The jar package will be empty except for a copy of the pom and some
 autogenerated folders and files. You can see the contents by:
</p>

<source>
cd target
jar tf editing-template-addon-0.01.00.jar
</source>

<p>The contents will be:</p>

<source>
META-INF/
META-INF/MANIFEST.MF
META-INF/maven/
META-INF/maven/org.example/
META-INF/maven/org.example/editing-template-addon/
META-INF/maven/org.example/editing-template-addon/pom.xml
META-INF/maven/org.example/editing-template-addon/pom.properties
</source>

<p>Your package will now also be installed in your local maven repository.
 Your local maven repository normally is at ~/.m2, i.e. .m2 in the user root folder.
 The pom is also copied to your local maven repository.
 The path in your maven repository is the group id specified in the pom:
</p>

<source>
.m2/repository/org/example/editing-template-addon/0.01.00/editing-template-addon-0.01.00.jar
.m2/repository/org/example/editing-template-addon/0.01.00/editing-template-addon-0.01.00.pom
</source>

<source>
cd ~/myaddon
mvn clean
</source>

<p>Both your ~/myaddon/target folder and the package in your local maven repository
   are gone.
</p>
<p>
 You can run clean and install from one command, if you want to purge your a previous
 build before placing a new:
</p>

<source>
cd ~/myaddon
mvn clean install
</source>

<p>If you generate your maven project from a Hippo maven archetype,
 the pom, which is a little longer than the above, is already made for you.
 See <a href='http://www.onehippo.org/site-toolkit/getting+started/generate+project'>generate project</a>.
</p>

  </section>
 </body>
</document>

