<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC
  "-//Apache Software Foundation//DTD XDOC 1.0//EN"
  "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<!--
  Copyright 2007 Hippo
  
  Licensed under the Apache License, Version 2.0 (the  "License"); 
  you may not use this file except in compliance with the License. 
  You may obtain a copy of the License at
  
  http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" 
  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
  See the License for the specific language governing permissions and 
  limitations under the License.
-->
<document>
  <properties>
    <title>Frontend Plugin Architecture</title>
  </properties>
  <head>
  </head>
  <body>
    <section name="Frontend Plugin Architecture">
    
      <p>
        Hippo ECM provides an <a href="http://wicket.apache.org">Apache Wicket</a> based
        plugin architecture to facilitate a customizable GUI. All standard GUI components are written
        as plugins. The Hippo CMS application offers a default configuration for these plugins.
        Customizing Hippo CMS comes down to extending the standards plugins, and/or writing your own,
        and configuring them to form your own custom application.
      </p>

      <p>
        Plugins are aware of the JCR context for the page and are notified when it changes.  This occurs
        for example when the page contains a BrowserPlugin.  When a node is selected on the (JCR) tree,
        all plugins will be notified.  This mechanism is e.g. used to show the workflow plugin for nodes that
        have a workflow.
      </p>

      <p>
        Frontend plugins extend the Wicket component model.  Wicket HTML fragments 
        can contain references to plugins that are not added explicitly in the Java code.  Instead,
        these references are resolved by the configuration in the Hippo repository.
      </p>

      <p>
        The configuration is stored in nodes of (primary) type hippo:frontendplugin.
        The property hippo:renderer determines what Java class is instantiated.
      </p>

      <subsection name="Pages">
        <p>
          Web applications that are completely configured from the repository consist of one page,
          "Home".  The configuration can be found under the repository node
          <!-- FIXME Frank: link to repo viewer in demo war -->
        </p>
<source>
/hippo:configuration/hippo:frontend/default
</source>
      </subsection>

      <subsection name="Root plugin">
        <p>
          The Home page in the application has a root plugin that is loaded when Wicket tries
          to render it.  This plugin must be a subclass of org.hippoecm.frontend.plugin.Plugin,
          itself a Wicket Panel <!-- FIXME Frank: link to API docs -->.  An example:
        </p>
<source>
public class RootPlugin extends Plugin {
    private static final long serialVersionUID = 1L;

    public RootPlugin(String id, final JcrNodeModel model) {
        super(id, model);
    }

    public void update(final AjaxRequestTarget target, JcrEvent jcrEvent) {
    }
}
</source>
        <p>
          When the class is instantiated, the children of the repository node are instantiated
          themselves as Plugins and added as Wicket components.
        </p>

        <p>
          The plugins that are configured in the repository node structure must therefore
          correspond to missing Wicket components in the HTML for RootPlugin.  For example,
          if the above root component has this html:
        </p>
<source>
&lt;html xmlns:wicket="http://wicket.apache.org/"&gt;
    &lt;wicket:panel&gt;
      &lt;p&gt;
        &lt;div wicket:id="subPlugin">[sub plugin will be rendered here]&lt;/div&gt;
      &lt;/p&gt;
    &lt;/wicket:panel&gt;
&lt;/html>
</source>
        <p>
          then the repository structure that will generate the correctc component hierarchy is:
        </p>
<source>
[repository root]
`-- configuration
    `-- frontend
        `-- default [hippo:page]
            `-- RootPlugin [hippo:frontendplugin]
                `-- subPlugin [hippo:frontendplugin]
</source>
      </subsection>
    </section>
  </body>
</document>
