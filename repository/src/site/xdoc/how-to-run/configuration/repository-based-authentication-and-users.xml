<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC
  "-//Apache Software Foundation//DTD XDOC 1.0//EN"
  "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<!--
  Copyright 2007 Hippo
  
  Licensed under the Apache License, Version 2.0 (the  "License"); 
  you may not use this file except in compliance with the License. 
  You may obtain a copy of the License at
  
  http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" 
  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
  See the License for the specific language governing permissions and 
  limitations under the License.
-->
<document>
    <properties>
        <title>Repository based Authentication and Users</title>
    </properties>
    <body>
        <section name="Repository based Authentication">
            The repository can be configured to store the users as nodes inside the repository itself. 
            To achieve this the RepositoryLoginModule is configured in the <code>repository.xml</code> in the Security section.
            The authentication module is based on <a href="http://java.sun.com/j2se/1.5.0/docs/guide/security/jaas/JAASRefGuide.html" title="Sun JAAS">JAAS</a>. 
            By default this moduled is enabled.
<source>
&lt;LoginModule class="org.hippoecm.repository.security.RepositoryLoginModule"&gt;
    &lt;!-- default values:
        &lt;param name="anonymousId" value="anonymous"/&gt;
        &lt;param name="systemuserId" value="systemuser"/&gt;
        &lt;param name="systemuserPassword" value="password"/&gt;
        &lt;param name="debug" value="false"/&gt;
        &lt;param name="maxCacheTimeMilliSec" value="10000"/&gt;
    --&gt;
&lt;/LoginModule&gt;
</source>
            The defaults as shown in the comments can be simply overwritten by setting the 
            parameters. The parameters are:
            <table>
                <tr><td>anonymousId</td><td>The id given to a user in a non authenticated session.</td></tr>
                <tr><td>systemuserId</td><td>The id of the systemuser. The system user is used to lookup the user nodes in the repository.</td></tr>
                <tr><td>systemuserPassword</td><td>The password of the systemuser.</td></tr>
                <tr><td>debug</td><td>Enable or disable debug info.</td></tr>
                <tr><td>maxCacheTimeMilliSec</td><td>Time in miliseconds between user credential cache purges.</td></tr>
            </table>
        </section>
        
        <section name="Configure users for the RepositoryLoginModule">
            <p>
                The users are stored in the repository as childeren of the node 
                <code>/hippo:configuration/hippo:users</code>.
                A user node has the following configuration:
            </p>
<source>
&lt;sv:node sv:name="demo"&gt;
    &lt;sv:property sv:name="jcr:primaryType" sv:type="Name"&gt;
        &lt;sv:value&gt;hippo:user&lt;/sv:value&gt;
    &lt;/sv:property&gt;
    &lt;sv:property sv:name="hippo:password" sv:type="String"&gt;    
        &lt;sv:value&gt;demo&lt;/sv:value&gt;
    &lt;/sv:property&gt;
&lt;/sv:node&gt;
</source>
          <p>
              The password can be stored in plain text or with a hash. A hash has the following form:
          </p>
          <pre><code>$&lt;hash alogrith&gt;$&lt;salt&gt;$&lt;hash&gt;</code></pre>
          <p>
              For example the password "admin" could result in the following hash:
          </p>
          <pre><code>$SHA-256$HIlytXwnqSU=$NqCi2sJoM4qAwQ8136GYueUVA/TSyidpAI3Evn+y/hc=</code></pre>
          <p>
              The hashing alogrithm can be any alogrith supported by MessageDigest like MD5, SHA-1 and SHA-256. The 
              password utility class "PasswordHelper" can be used to generate hashes with the static method
              PasswordHelper.getHash(String password).
          </p>
        </section>
    </body>
</document>
