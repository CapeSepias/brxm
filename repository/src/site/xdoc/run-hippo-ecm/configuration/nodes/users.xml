<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC
  "-//Apache Software Foundation//DTD XDOC 1.0//EN"
  "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<!--
  Copyright 2007 Hippo

  Licensed under the Apache License, Version 2.0 (the  "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS"
  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<document>
    <properties>
        <title>Users configuration</title>
    </properties>
    <body>
        <section name="Users Configuration">
            <p>
                The users are stored in the repository as childeren of the node
                <code>/hippo:configuration/hippo:users</code>.
                A user node has the following configuration:
            </p>
<source>
&lt;sv:node sv:name="demo"&gt;
    &lt;sv:property sv:name="jcr:primaryType" sv:type="Name"&gt;
        &lt;sv:value&gt;hippo:user&lt;/sv:value&gt;
    &lt;/sv:property&gt;
    &lt;sv:property sv:name="hippo:password" sv:type="String"&gt;
        &lt;sv:value&gt;demo&lt;/sv:value&gt;
    &lt;/sv:property&gt;
&lt;/sv:node&gt;
</source>
            <p>
                The password can be stored in plain text or with a hash. A hash has the following form:
            </p>
            <pre><code>$&lt;hash alogrith&gt;$&lt;salt&gt;$&lt;hash&gt;</code></pre>
            <p>
                For example the password "admin" could result in the following hash:
            </p>
            <pre><code>$SHA-256$HIlytXwnqSU=$NqCi2sJoM4qAwQ8136GYueUVA/TSyidpAI3Evn+y/hc=</code></pre>
            <p>
                The hashing alogrithm can be any alogrith supported by MessageDigest like MD5, SHA-1 and SHA-256. The
                password utility class "PasswordHelper" can be used to generate hashes with the static method
                PasswordHelper.getHash(String password).
            </p>
            <p>
                The users configuration is used by the <a href="../repository/authentication.html">RepositoryLoginModule</a>.
            </p>
        </section>
    </body>
</document>
