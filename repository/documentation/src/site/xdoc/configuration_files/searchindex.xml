<?xml version="1.0" encoding="UTF-8"?>
<document>
    <properties>
        <author email="a.schrijvers@hippo.nl">Ard Schrijvers</author>
        <title>Configuration</title>
    </properties>
    <head>
        <meta />
    </head>
    <body>
        <section name="SearchIndex configuration">
            <p>
                The SearchIndex element is part of the Workspace configuration. See <a href="workspace.html">Workspace</a> for 
                a minimal SearchIndex configuration. 
                <br/> 
                See 
                <br/>
                <a href="http://wiki.apache.org/jackrabbit/Search">http://wiki.apache.org/jackrabbit/Search</a> for the JackRabbit wiki about JackRabbit
                SearchIndex configuration,
                <br/> 
                and 
                <br/>
                <a href="http://wiki.apache.org/jackrabbit/IndexingConfiguration">http://wiki.apache.org/jackrabbit/IndexingConfiguration</a> for the 
                JackRabbit wiki about the JackRabbit IndexingConfigurationImpl.
                
                <br/><br/>
                This page elaborates a little on "best practice" SearchIndex params, the custom Hippo Repository 
                ServicingSearchIndex, and the custom Hippo Repository ServicingIndexingConfigurationImpl. 
            </p>
            <p>
                <subsection name="SearchIndex Configuration">
                    <p>
                        For M1, the minimal SearchIndex configuration looks like (for M2, the indexingConfiguration will probably 
                        denote some repository path like "jcr://some/location/in/workspace" instead of the file system location or available in classpath
                        as it is at the moment.)
                    </p>
                    <source>
                        &lt;SearchIndex class="org.hippoecm.repository.FacetedNavigationEngineThirdImpl"&gt;
                            &lt;param name="indexingConfiguration" value="indexing_configuration.xml"/&gt;
                            &lt;param name="indexingConfigurationClass" value="org.hippoecm.repository.query.lucene.ServicingIndexingConfigurationImpl"/&gt;
                        &lt;/SearchIndex&gt;
                    </source>
                </subsection>
                
                <subsection name="Best Practice SearchIndex Configuration">
                    <p>
                    At <a href="http://wiki.apache.org/jackrabbit/Search">http://wiki.apache.org/jackrabbit/Search</a> all available &lt;SearchIndex&gt; params 
                    are described. Below follows some Hippo Repository default settings for some combination of params
                    which have been found to be proper values. 
                    </p>
                    <source>
                        &lt;param name="useCompoundFile" value="true"/&gt;
                        &lt;param name="minMergeDocs" value="100"/&gt;
                        &lt;param name="volatileIdleTime" value="10"/&gt;
                        &lt;param name="maxMergeDocs" value="1000000000"/&gt;
                        &lt;param name="mergeFactor" value="5"/&gt;
                    </source>
                    <p>
                        Setting maxMergeDocs too low or mergeFactor too high results in many lucene indexes
                        which in turn slows down lucene queries severly. 
                        The volatileIdleTime is the idle time in seconds until the volatile index part is moved to a 
                        persistent index even though minMergeDocs is not reached.
                        Also see 
                        <a href="#Expert: JackRabbit lucene implementation">JackRabbit lucene implementation</a>.
                    </p>
                    <p>
                        Two other interesting SearchIndex params are
                        <ol>
                            <li>textFilterClasses  : Sets the list of text filters (and text extractors) to use for extracting text content 
                            from binary properties. The list must be comma (or whitespace) separated, and contain 
                            fully qualified class names of the TextFilter (and since 1.3 TextExtractor ) classes to 
                            be used. The configured classes must all have a public default constructor.
                            </li>
                            <li> analyzer: Default, JackRabbit ships with a JackrabbitAnalyzer. The analyzer configured 
                                in &lt;param name="analyzer" value="..."&gt; is used as default text analyzer. If needed, this 
                                analyzer can be replaced by for example org.apache.lucene.analysis.Analyzer.GermanAnalyzer for
                                german texts. 
                                At <a href="http://wiki.apache.org/jackrabbit/IndexingConfiguration">IndexingConfiguration</a> at the bottom,
                                there is described how to set different analyzers per property.
                            </li>
                        </ol>
                        
                    </p>
                    <p>
                        At the moment of this writing we have forceConsistencyCheck, enableConsistencyCheck and autoRepair set to true.
                        Still needed investigation wether this is needed.
                    </p>    
                    <source>
                        &lt;param name="forceConsistencyCheck" value="true"/&gt;
                        &lt;param name="enableConsistencyCheck" value="true"/&gt;
                        &lt;param name="autoRepair" value="true"/&gt; 
                    </source>
                    
                </subsection>
                
                <subsection name="ServicingSearchIndex">
                    The ServicingSearchIndex extends the org.apache.jackrabbit.core.query.lucene.SearchIndex
                    to enable 
                    <ol>
                        <li>
                            getting indexing_configuration from a jar classpath instead of the current 
                            JackRabbit implementation which (at the moment of this writing though since there is a JIRA
                            issue that addresses this issue, and describes indexing_configuration being fetched from the 
                            repository content itself) can only fetch an indexing_configuration from filesystem.  
                        </li>
                        <li>
                            extend the createDocument that is responsible for creating a lucene Document which will be 
                            added to the lucene index. This createDocument uses Hippo ServicingNodeIndexer which indexes 
                            documents in a way to enable fast faceted searching on their properties. 
                        </li>
                    </ol>
                    
                    
                </subsection>
                
                <subsection name="ServicingIndexingConfigurationImpl">
                    
                </subsection>
                
                <subsection name="Expert: JackRabbit lucene implementation">
                    <!-- 
                        <param name="analyzer" value="org.apache.lucene.analysis.standard.StandardAnalyzer"/>
                        <param name="queryClass" value="org.apache.jackrabbit.core.query.QueryImpl"/>
                     -->
                </subsection>
                
                <subsection name="Expert: Hippo Repository lucene implementation">
                    
                </subsection>
            </p> 
             
        </section>       
    </body>
</document>