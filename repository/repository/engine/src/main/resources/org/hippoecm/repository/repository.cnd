/*
 * Copyright 2007 Hippo
 *
 * Licensed under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

<rep='internal'>
<jcr='http://www.jcp.org/jcr/1.0'>
<nt='http://www.jcp.org/jcr/nt/1.0'>
<mix='http://www.jcp.org/jcr/mix/1.0'>
<hippo='http://www.hippoecm.org/nt/1.2'>

// define the jarFile nodetype; it is required for the
// repository class loader.  JR usually loads it lazily
// but since we always need it, it's easier done here.
[rep:jarFile] mixin
- rep:jarExpanded (date) mandatory copy
+ rep:jarContents (nt:base) = nt:folder mandatory copy

[hippo:query] > nt:query

[hippo:implementation] mixin
- hippo:classname (string) mandatory
- hippo:serialver (long)

[hippo:mirror]
- hippo:docbase (string) mandatory
+ * multiple ignore

[hippo:facetresult]
- hippo:count (long)
+ * multiple ignore

[hippo:facetsubsearch]
- hippo:queryname (string) mandatory
- hippo:docbase (string) mandatory
- hippo:facets (string) mandatory multiple
- hippo:search (string) multiple
- hippo:count (long)
+ hippo:resultset (hippo:facetresult) = hippo:facetresult
+ * (hippo:facetsubsearch) = hippo:facetsubsearch multiple ignore

[hippo:facetsearch]
- hippo:queryname (string) mandatory
- hippo:docbase (string) mandatory
- hippo:facets (string) mandatory multiple
- hippo:count (long)
+ hippo:resultset (hippo:facetresult) = hippo:facetresult
+ * (hippo:facetsubsearch) = hippo:facetsubsearch multiple ignore

[hippo:request] > nt:unstructured, mix:versionable

[hippo:facetselect] > nt:base
- hippo:docbase (string) mandatory
- hippo:facets (string) mandatory multiple
- hippo:values (string) mandatory multiple
- hippo:modes (string) mandatory multiple < 'select', 'stick', 'clear', 'single', 'prefer', 'prefer-single'
+ * multiple ignore

[hippo:document] > nt:base
+ * (hippo:facetselect) version

[hippo:handle] > nt:unstructured
- hippo:discriminator (string) multiple
+ * (hippo:document) = hippo:document multiple version
+ hippo:request (hippo:request) = hippo:request multiple ignore

[hippo:hardhandle] > mix:versionable mixin

[hippo:facetlink] 
- hippo:docbase (string) mandatory

[hippo:resource]
- jcr:encoding (string)
- jcr:mimeType (string) mandatory
- jcr:data (binary) primary mandatory
- jcr:lastModified (date) mandatory ignore

[hippo:type] > nt:base
- hippo:nodetype (string) mandatory
- hippo:display (string) mandatory
- hippo:classname (string) mandatory

[hippo:types] > nt:base
+ * (hippo:type) = hippo:type

[hippo:workflow] > hippo:type
- hippo:workflow (string)
- hippo:privileges (string) multiple
+ hippo:types (hippo:types) = hippo:types mandatory autocreated
+ hippo:config (nt:unstructured) = nt:unstructured

[hippo:workflowcategory] > nt:base orderable
+ * (hippo:workflow) = hippo:workflow

[hippo:workflowfolder] > nt:base, mix:referenceable
+ * (hippo:workflowcategory) = hippo:workflowcategory

[hippo:ocmquery] > hippo:query
- hippo:classname (string) mandatory
+ hippo:types (hippo:types) = hippo:types mandatory autocreated

[hippo:ocmqueryfolder] > nt:base, mix:referenceable
+ * (nt:query) = hippo:ocmquery

[hippo:initializeitem] > nt:base
- hippo:extensionsource (string)
- hippo:sequence (double)
- hippo:namespace (string)
- hippo:nodetypesresource (string)
- hippo:nodetypes (binary)
- hippo:contentresource (string)
- hippo:content (string)
- hippo:contentroot (string)
- hippo:contentdelete (string)

[hippo:initializefolder] > nt:base orderable
- hippo:version (string) multiple
+ * (hippo:initializeitem) = hippo:initializeitem

[hippo:temporaryfolder] > nt:unstructured

[hippo:applicationfolder] > nt:unstructured orderable

[hippo:accessmanager] > nt:base
- hippo:permissioncachesize (long) = '20000' mandatory autocreated 

[hippo:user] > nt:base
- hippo:securityprovider (string) = 'internal' mandatory autocreated
- hippo:active (boolean) = true mandatory autocreated
- hippo:password (string)
- hippo:passkey (string)
- hippo:lastlogin (date)

[hippo:externaluser] > hippo:user
- hippo:lastsync (date)
- * (string)

[hippo:group] > nt:base
- hippo:securityprovider (string) = 'internal' mandatory autocreated
- hippo:members (string) multiple
- hippo:groups (string) multiple
- hippo:description (string)

[hippo:externalgroup] > hippo:group
- hippo:syncdate (date)
- * (string)

[hippo:role] > nt:base
- hippo:privileges (string) multiple
- hippo:roles (string) multiple
- hippo:jcrread (boolean)
- hippo:jcrwrite (boolean)
- hippo:jcrremove (boolean)

[hippo:externalrole] > hippo:role
- hippo:securityprovider (string) = 'internal' mandatory autocreated

[hippo:authrole] > nt:base
- hippo:users (string) multiple
- hippo:groups (string) multiple
- hippo:role (string) mandatory
- hippo:description (string)

[hippo:facetrule] > nt:base
- hippo:facet (string) mandatory 
- hippo:value (string) mandatory 
- hippo:type (string) = 'String' mandatory < 'String', 'Name', 'Reference'
- hippo:equals (boolean) = 'true' mandatory autocreated
- hippo:filter (boolean) = 'false' mandatory autocreated
- hippo:description (string)

[hippo:domainrule] > nt:base
+ * (hippo:facetrule) = hippo:facetrule multiple
- hippo:description (string)

[hippo:domain] > nt:base
+ * (hippo:domainrule) = hippo:domainrule multiple 
+ * (hippo:authrole) = hippo:authrole multiple
- hippo:description (string)

[hippo:userprovider] >  nt:base
- hippo:dirlevels (long) = '0' autocreated

[hippo:groupprovider] >  nt:base
- hippo:dirlevels (long) = '0' autocreated

[hippo:roleprovider] >  nt:base

[hippo:securityprovider] > nt:base orderable
- hippo:classname (string) mandatory
+ hippo:userprovider (hippo:userprovider) = hippo:userprovider
+ hippo:groupprovider (hippo:groupprovider) = hippo:groupprovider
+ hippo:roleprovider (hippo:roleprovider) = hippo:roleprovider

[hippo:userfolder] > nt:base
+ * (hippo:user) = hippo:user
+ * (hippo:userfolder) = hippo:userfolder

[hippo:groupfolder] > nt:base
+ * (hippo:group) = hippo:group
+ * (hippo:groupfolder) = hippo:groupfolder

[hippo:rolefolder] > nt:base
+ * (hippo:role) = hippo:role

[hippo:domainfolder] > nt:base
+ * (hippo:domain) = hippo:domain

[hippo:securityfolder] > nt:base
- hippo:userspath (string) mandatory
- hippo:groupspath (string) mandatory
- hippo:rolespath (string) mandatory
- hippo:domainspath (string) mandatory
+ hippo:accessmanager (hippo:accessmanager) = hippo:accessmanager
+ * (hippo:securityprovider) = hippo:securityprovider

[hippo:remodel] mixin
- hippo:uri (string) mandatory
 
[hippo:field] > nt:base
- hippo:name (string)
- hippo:path (string)
- hippo:type (string)
- hippo:multiple (boolean)
- hippo:mandatory (boolean)
- hippo:ordered (boolean)
- hippo:primary (boolean)

[hippo:nodetype] > hippo:document orderable
- hippo:type (string)
- hippo:supertype (string) multiple
- hippo:node (boolean)
- hippo:mixin (boolean)
+ hippo:field (hippo:field) multiple

[hippo:templatetype] orderable
+ hippo:nodetype (hippo:handle) mandatory
+ hippo:template (hippo:handle)
+ hippo:prototype (nt:base)

[hippo:propertyreference] > nt:base

[hippo:relativepropertyreference] > hippo:propertyreference
- hippo:relPath (string) mandatory

[hippo:resolvepropertyreference] > hippo:propertyreference
- hippo:relPath (string) mandatory

[hippo:builtinpropertyreference] > hippo:propertyreference
- hippo:method (string) mandatory < 'ancestors'

[hippo:propertyreferences] orderable
+ * (hippo:propertyreference)

[hippo:deriveddefinition] > nt:base
- hippo:nodetype (string) mandatory
- hippo:classname (string) mandatory
- hippo:serialver (long)
+ hippo:accessed (hippo:propertyreferences) = hippo:propertyreferences autocreated
+ hippo:derived (hippo:propertyreferences) = hippo:propertyreferences autocreated

[hippo:derivativesfolder] > nt:base orderable
+ * (hippo:deriveddefinition) = hippo:deriveddefinition multiple

[hippo:derived] mixin
- hippo:compute (Reference)
  // Indicates the method that is used to compute the derived properties
  // defined by any subtypes that extend this type.
  // should point to a node of type hippo:deriveddefinition
- hippo:related (Reference) multiple
  // A multivalue property that links to all the nodes that where used to
  // compute derived proper

// translation
[hippo:translation]
- hippo:language (string) mandatory
- hippo:message (string) mandatory
- hippo:property (string)
- hippo:value (string)
- hippo:workflow (string)

[hippo:translated] mixin
+ hippo:translation (hippo:translation) multiple

[hippo:harddocument] > hippo:derived, mix:referenceable, mix:versionable mixin
- hippo:paths (string) multiple mandatory

[hippo:softdocument] mixin
- hippo:uuid (string) mandatory
- hippo:paths (string) multiple mandatory

[hippo:basequeryfolder] > nt:unstructured // FIXME
+ * (nt:query) = hippo:query

[hippo:queryfolder] > hippo:basequeryfolder
+ * (nt:query, hippo:basequeryfolder)

[hippo:configuration] > nt:base
+ hippo:workflows (hippo:workflowfolder) = hippo:workflowfolder mandatory
+ hippo:documents (hippo:ocmqueryfolder) = hippo:ocmqueryfolder mandatory
+ hippo:initialize (hippo:initializefolder) = hippo:initializefolder
+ hippo:temporary (hippo:temporaryfolder) = hippo:temporaryfolder autocreated
+ hippo:users (hippo:userfolder) = hippo:userfolder
+ hippo:roles (hippo:rolefolder) = hippo:rolefolder
+ hippo:groups (hippo:groupfolder) = hippo:groupfolder
+ hippo:domains (hippo:domainfolder) = hippo:domainfolder
+ hippo:derivatives (hippo:derivativesfolder) = hippo:derivativesfolder autocreated mandatory
+ hippo:frontend (hippo:applicationfolder) = hippo:applicationfolder
+ hippo:queries (hippo:basequeryfolder) = hippo:queryfolder mandatory autocreated
+ hippo:security (hippo:securityfolder) = hippo:securityfolder
