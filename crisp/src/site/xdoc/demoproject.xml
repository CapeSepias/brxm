<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2017 Hippo B.V. (http://www.onehippo.com)
-->
<!DOCTYPE document PUBLIC "-//Apache Software Foundation//DTD XDOC 1.0//EN"
  "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<document>
  <properties>
    <title>Demo Project</title>
  </properties>
  <body>

    <section name="Demo Project">

      <subsection name="Introduction">

        <p>
          You can download the demo project from Hippo Maven 2 Enterprise Repository.
          For example, you can download the demo project of v1.0.0 from here:
        </p>

        <ul>
          <li>
            <a href="https://maven.onehippo.com/maven2-enterprise/com/onehippo/cms7/hippo-addon-crisp-demopkg/1.0.0/hippo-addon-crisp-demopkg-1.0.0-src.zip">
              https://maven.onehippo.com/maven2-enterprise/com/onehippo/cms7/hippo-addon-crisp-demopkg/1.0.0/hippo-addon-crisp-demopkg-1.0.0-src.zip
            </a>
          </li>
        </ul>

        <p>
          Alternatively, you can use
          <a href="https://maven.apache.org/plugins/maven-dependency-plugin/">Apache Maven Dependency Plugin</a>
          to download the zip artifact into your local Maven repository directory by using a command like the following example:
        </p>

        <div class="brush: bash">
          <source><![CDATA[
mvn org.apache.maven.plugins:maven-dependency-plugin:3.0.0:get \
    -DremoteRepositories=hippo-maven2-enterprise \
    -DgroupId=org.onehippo.cms7 \
    -DartifactId=hippo-addon-crisp-demopkg \
    -Dversion=1.0.0 \
    -Dclassifier=src \
    -Dpackaging=zip \
    -Dtransitive=false
          ]]></source>
        </div>

        <p>
          And, you will be able to find the zip file in your local Maven repository directory.
          e.g, <code>~/.m2/repository/com/onehippo/cms7/hippo-addon-crisp-demopkg/1.0.0/hippo-addon-crisp-demopkg-1.0.0-src.zip</code>.
        </p>

        <p>
          <em>Note:</em> you must be authenticated to download the zip file in either case, and please replace the version
          with a proper released version based on the <a href="release-notes.html">Release Notes</a>.
        </p>

        <p>
          In the demo project, you can build and run demo application, which contains all the examples explained
          in this site documentation.
        </p>

        <p>To build and run demo project:</p>
        <div class="brush: bash">
        <source><![CDATA[
$ cd demo
$ mvn clean verify
$ mvn -P cargo.run
        ]]></source>
        </div>

      </subsection>

      <subsection name="Testing in Content Delivery tier Application">

        <ul>
          <li>Visit http://localhost:8080/site/news/.</li>
          <li>Click on any news article.</li>
          <li>You will see all the product list with custom-generated URI links at the bottom of the page.</li>
          <li>
            The external product data was retrieved through <code>ResourceServiceBroker</code>.
            See <code>site/src/main/java/com/onehippo/cms7/crisp/demo/components/NewsContentComponent.java</code>
            and <code>bootstrap/webfiles/src/main/resources/site/freemarker/hstdefault/newspage-main.ftl</code>
            for detail.
          </li>
        </ul>

      </subsection>

      <subsection name="Testing in Content Authoring tier Application">

        <ul>
          <li>Visit http://localhost:8080/cms/.</li>
          <li>Select and edit an news document.</li>
          <li>
            Select 'Related Products' field and try to add some products through the pop up dialog
            (which is part of External Document Picker plugin).
          </li>
          <li>
            The external product data was retrieved through <code>ResourceServiceBroker</code>.
            See <code>cms/src/main/java/com/onehippo/cms7/crisp/demo/cms/plugin/CommerceProductDataServiceFacade.java</code>
            for detail.
          </li>
        </ul>

      </subsection>

      <subsection name="Testing an Example Web-Hook Invalidating Resource Data Cache">

        <p>
          By default, the <code>ResourceResolver</code> component for demo product catalogs data in the demo project
          caches result data based on resource space name, operation name, relative resource path, path variables, etc.
          for 1 minutes ("time-to-live").
          So, for the same requests, it will return the cached data without having to invoke the backend REST service
          again as long the the cached data was not expired in 1 minutes ("time-to-live").
        </p>

        <p>
          You can clear all the cached data by invoking a "Web-Hook" URL like the following manually.
        </p>

        <div class="brush: bash">
          <source><![CDATA[
$ curl http://localhost:8080/site/examples/invalidate-cache.jsp \
    -d "resource_space=demoProductCatalogs&secret=some_secret"
          ]]></source>
        </div>

        <p>
          If you invoke the "Web-Hook" page manually, then the specific resource data cache will be cleared
          right away in this example.
        </p>

      </subsection>

    </section>

  </body>
</document>
