<?xml version="1.0" encoding="UTF-8"?>
<document>
    <properties>
        <author>Hippo</author>
        <title>Hippo ECM Documentation: Interfacing with Hippo Repository by example</title>
    </properties>
    <!-- Optional HEAD element, which is copied as is into the XHTML <head> element -->
    <head>
        <meta />
    </head>
    <body>
        <!-- The body of the document contains a number of sections -->
        <section name="Overview">
            <subsection name="Intro">
                <img src="../images/arch-dropbox.jpg" alt=""/>
                <p>
                    An typical application that interfaces with Hippo ECM most likely 
                    has a architecture like the one depicted above. The application consists 
                    of a custom software component and the JCR api for communicating in a standarized way with
                    Hippo ECM. This makes it extremely simple to write an application that operates on the 
                    content repository. All you have to know is where to get a repository instance and offcourse
                    how to manipulate a JCR tree, which by the way has a very self explanatory interface. You'll be
                    suprised by the simplicity of programming against Hippo ECM, while at the same time 
                    taking advantage (with no extra work) of the powerfull features build into Hippo ECM like 
                    faceted search.
                    
                    Oke lets get to the point and start working out an example, demostrating all stated above.   
                </p>
            </subsection>
        </section>
        <section name="The Example">
            <subsection name="What's the example all about">
                <p>
                    In the example I'll be demonstrating how you recusively walk through a 
                    arbitrary directory on the file system, extract some meta-data and store the file
                    accordingly in Hippo ECM.
                </p>  
            </subsection>
            <subsection name="Give me the code!">
                <p>
                    I like to start by first showing you the code, give it some thought, then we'll go into
                    detail. 
                </p>
                <source>
                    <![CDATA[
                    import java.io.File;
                    import java.io.FileNotFoundException;
                    import java.io.IOException;
                    
                    import javax.activation.FileDataSource;
                    import javax.activation.MimetypesFileTypeMap;
                    import javax.jcr.Node;
                    import javax.jcr.Repository;
                    import javax.jcr.RepositoryException;
                    import javax.jcr.Session;
                    import javax.jcr.SimpleCredentials;
                    
                    import org.hippoecm.repository.HippoRepositoryFactory;
                    
                    public class Dropbox
                    {
                        private String dropboxLocation;
                        private Repository repo;
                        
                        /*
                        * Create a new Dropbox with dropbox as location to look for files
                        */
                        public Dropbox(String dropbox) throws RepositoryException
                        {
                            this.dropboxLocation = dropbox;
                            repo = (Repository) HippoRepositoryFactory.getHippoRepository("rmi://localhost:1099/jackrabbit.repository");
                        }
                        
                        public Dropbox() throws RepositoryException {
                            this("");
                        }
                        
                        /*
                        * Set the location of the dropbox
                        */
                        public void setDropbox(String location) {
                            this.dropboxLocation = location;
                        }
                        
                        /*
                        * Get all the files from the dropbox location and save them to the 
                        * repository
                        */
                        public void drop() throws RepositoryException {
                            // make a session request to the repository
                            Session session = repo.login(new SimpleCredentials("systemuser", "systempass".toCharArray()));
                            
                            Node root = session.getRootNode();
                            
                            // put all the files in a node called dropbox
                            if(root.hasNode("dropbox")) {
                                root = root.getNode("dropbox");
                            } else {
                                root = root.addNode("dropbox");
                            }
                            
                            // Recusively walk through the dropbox directory and construct a JCR representation of
                            // the files.
                            File f = new File(dropboxLocation);
                            try {
                                dropFiles(f, session, root);
                            } catch (IOException e) {
                                e.printStackTrace();
                            }
                            
                            // leave the session
                            session.logout();
                            
                            System.out.println("done!");	
                        }
                            
                        /*
                        * Recusively append all files (except hidden files) located in the dropbox folder to the
                        * JCR tree, while doing so it saves the changes to the repository.
                        * 
                        * Note: - file names should not contain the following characters: ":"
                        * 		 - node names encoded in ISO9075
                        */
                        private void dropFiles(File f, Session session, Node folder) throws RepositoryException, IOException {
                        File[] files = f.listFiles();
                        
                        for(int i=0;i<files.length;i++) {
                            
                                if(files[i].getName().equals(".") || 
                                    files[i].getName().equals("..") ||
                                        files[i].isHidden()) {
                                    continue;
                                }
                            
                                if(files[i].isDirectory()) {
                                    dropFiles(files[i], session, folder.addNode(files[i].getName()));
                                    continue;
                                }
                            
                                System.out.println("importing (" + files[i].getName() + ") ...");
                            
                                try {
                                    createFile(folder, files[i]);
                                } catch (FileNotFoundException e) {
                                    e.printStackTrace();
                                }
                            
                                session.save();
                            }
                        }
                            
                        /*
                        * Creates a new file, node name encoded in ISO9075
                        */
                        private Node createFile(Node folder, File f) throws IOException, RepositoryException {
                            FileDataSource ds = new FileDataSource(f);
                            ds.setFileTypeMap(new MimetypesFileTypeMap(getClass().getResourceAsStream("mime.types")));
                            
                            Node n = folder.addNode( org.apache.jackrabbit.util.ISO9075.encode(f.getName()), "hippo:document");
                            n.setProperty("mimeType", ds.getContentType());	
                            n.setProperty("lastModified", f.lastModified());
                            n.setProperty("path", f.getAbsolutePath());
                            
                            return n;
                        }
                        
                        public static void main(String[] args) {
                    		try {
                    			new Dropbox(args[0]).drop();
                    		} catch (RepositoryException e) {
                    			e.printStackTrace();
                    		}
                    	}
                    }
                        ]]>
                </source>
            </subsection>
            <subsection name="Screenshot Of Eclipse Workspace">
                <img src="../images/screenshot-workspace-dropbox.jpg" alt=""/>
            </subsection>
            <subsection name="Applying Hippo Facets">
                todo
            </subsection>
        </section>
    </body>
</document>
