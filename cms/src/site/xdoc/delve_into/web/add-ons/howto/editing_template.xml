<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC
  "-//Apache Software Foundation//DTD XDOC 1.0//EN"
  "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<!--
  Copyright 2007 Hippo

  Licensed under the Apache License, Version 2.0 (the  "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS"
  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<document>
    <properties>
      <title>Create an Editing Template Add-on</title>
    </properties>
    <body>
      <section name="Create an Editing Template Add-on">
        <span class="shortdesc">Learn how to create an add-on for a namespace.</span>

        <p>
          We'll create a simple template and export all the necessary parts to form
          a reusable add-on with a custom namespace and document types.
        </p>

        <p>
          Create the namespace "fancy" (use "http://fancy" as the namespace's URL) and a type "document"
          (see <a href="../../../user/information_architects/howto/document_types/index.html">Document Types</a> 
          for instructions).
        </p>

        <p>
          <a href="../../../../images/addons/fancy_document.png">
            <img src="../../../../images/addons/fancy_document_thumbnail.png" alt="Fancy Document" />
          </a>
        </p>
        
        <subsection name="Create a new project">
          <p>
            In the following we will create a Maven project with the following structure:
          </p>
<source><![CDATA[
./pom.xml
./src/main/resources/hippoecm-extension.xml
./src/main/resources/fancy.cnd
./src/main/resources/fancy-namespace.xml
]]></source>
          To do so we create each of the listed files:
          <dl>
            <dt>pom.xml</dt>
            <dd>
              <p>
                For now, the project needs no dependencies as it's just making available
                a set of resources.  Those will be used by the repository as it boots up.
              </p>
<source><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<project 
  xmlns="http://maven.apache.org/POM/4.0.0" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <name>Editing Template Add-on</name>
  <description>Editing Template Add-on</description>
  <groupId>org.example</groupId>
  <artifactId>editing-template-addon</artifactId>
  <version>1.01.00</version>
  <packaging>jar</packaging>

</project>
]]></source>
            </dd>
            <dt>hippoecm-extension.xml</dt>
            <dd>
<source><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<sv:node xmlns:sv="http://www.jcp.org/jcr/sv/1.0"
         xmlns:nt="http://www.jcp.org/jcr/nt/1.0"
         xmlns:jcr="http://www.jcp.org/jcr/1.0"
         xmlns:rep="internal"
         xmlns:fn_old="http://www.w3.org/2004/10/xpath-functions"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:mix="http://www.jcp.org/jcr/mix/1.0"
         xmlns:hippo="http://www.hippoecm.org/nt/1.1"
         xmlns:fn="http://www.w3.org/2005/xpath-functions"
         sv:name="hippo:initialize">
  <sv:property sv:name="jcr:primaryType" sv:type="Name">
    <sv:value>hippo:initializefolder</sv:value>
  </sv:property>

  <sv:node sv:name="fancy">
    <sv:property sv:name="jcr:primaryType" sv:type="Name">
      <sv:value>hippo:initializeitem</sv:value>
    </sv:property>
    <sv:property sv:name="hippo:sequence" sv:type="Double">
      <sv:value>10050</sv:value>
    </sv:property>
    <sv:property sv:name="hippo:namespace" sv:type="String">
      <sv:value>http://fancy/0.1</sv:value>
    </sv:property>
    <sv:property sv:name="hippo:nodetypesresource" sv:type="String">
      <sv:value>fancy.cnd</sv:value>
    </sv:property>
  </sv:node>

  <sv:node sv:name="fancy-namespace">
    <sv:property sv:name="jcr:primaryType" sv:type="Name">
      <sv:value>hippo:initializeitem</sv:value>
    </sv:property>
    <sv:property sv:name="hippo:sequence" sv:type="Double">
      <sv:value>10051</sv:value>
    </sv:property>
    <sv:property sv:name="hippo:contentresource" sv:type="String">
      <sv:value>fancy-namespace.xml</sv:value>
    </sv:property>
    <sv:property sv:name="hippo:contentroot" sv:type="String">
      <sv:value>/hippo:namespaces</sv:value>
    </sv:property>
  </sv:node>
</sv:node>  
]]></source>
            </dd>
            <dt>fancy.cnd</dt>
            <dd>
              Run "Update all Content" if you haven't done so already.
              From the <a href="../../../sysadmin/configuration/console.html">CMS console</a>,
              use "CND Export" to download the
              fancy.cnd file.  This will give you the types as currently
              used by the repository.
            </dd>
          </dl>
          
          <p>
            <a href="../../../../images/addons/export_cnd.png">
              <img src="../../../../images/addons/export_cnd_thumbnail.png" alt="Export CND" />
            </a>
          </p>
          
          <dl>
            <dt>fancy-namespace.xml</dt>
            <dd>
              <p>
                In the <a href="../../../sysadmin/configuration/console.html">CMS console</a>,
                select the node <code>/hippo:namespaces/fancy</code>, and use the
                "Export Node" option to save its contents.
              </p>
              <p>
                <i>Note: due to a bug in the current milestone, you need to remove any
                occurence of <code>&lt;sv:property sv:name="hippo:related___pathreference"&gt;</code>
                in the exported XML for the import to work properly).</i>
              </p>
            </dd>
          </dl>
        </subsection>

        <subsection name="Build and deploy">
          <p>
            Build the project using Maven to have the add-on installed as a JAR in your
            local Maven repository:
          </p>
          <source>mvn install</source>
        </subsection>
        
        <subsection name="Next">
          <ul>
            <li>
              <a href="packaging.html">Package Hippo CMS with your add-on</a>
            </li>
          </ul>
        </subsection>

      </section>

    </body>
</document>
