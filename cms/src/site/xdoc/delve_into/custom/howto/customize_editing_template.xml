<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC
  "-//Apache Software Foundation//DTD XDOC 1.0//EN"
  "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<!--
  Copyright 2007 Hippo

  Licensed under the Apache License, Version 2.0 (the  "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS"
  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<document>
    <properties>
      <title>Customize an Editing Template</title>
    </properties>
    <body>
      <section name="Customize an Editing Template">
        <span class="shortdesc">Learn how to create a template with a custom layout.</span>

        <p>
          Using the <a href="../../user/information_architects/howto/document_types/editor.html">Document Type Editor</a>, you can create
          straightforward document types.  You can add and remove fields, specify their
          properties and rearrange their order in a list.  When moving fields up and
          down a list doesn't really cut it for you, you need to define your own layout.
        </p>

        <subsection name="Define the layout">
          <p>
            First, create a namespace and a type.  For this tutorial, we'll assume
            that you have <a href="../../web/add-ons/howto/editing_template.html">created the namespace "fancy"</a>.
          </p>
          <p>
            Then, create a new html file in the maven project,
            <code>src/main/resources/fancy/FancyDocument.html</code>:
<source><![CDATA[
<html xmlns:wicket="http://wicket.apache.org/">
  <wicket:panel>
    <table class="fancy">
      <tr>
        <td wicket:id="extension.body">[ body ]</td>
        <td>
          <div wicket:id="extension.bool">[ bool ]</div>
          <div wicket:id="extension.title">[ title ]</div>
        </td>
      </tr>
    </table>
  </wicket:panel>
</html>
]]></source>
          </p>
        </subsection>

        <subsection name="Update project">
          <p>
            To get maven to include this file in the resulting jar, add the
            following to your <code>pom.xml</code>:
<source><![CDATA[
    <build>
          ...
        <resources>
            <resource>
                <filtering>false</filtering>
                <directory>${basedir}/src/main/resources</directory>
                <includes>
                    <include>**/*.html</include>
                    <include>**/*.css</include>
                </includes>
            </resource>
        </resources>
           ...
    </build>
]]></source>
          </p>
        </subsection>

        <subsection name="Update template">
          <p>
            In the CMS console, select the node describing the plugin cluster
            (<code>/hippo:namespaces/fancy/document</code>).  It consists of three parts
          </p>
          <dl>
            <dt>nodetype</dt>
            <dd>A description of the node type, used by the editor</dd>
            <dt>prototype</dt>
            <dd>The prototype of the document, copied when a new instance is created</dd>
            <dt>template</dt>
            <dd>The cluster of plugins that displays the input boxes (template plugins).
              We'll be changing this part of the tree.
            </dd>
          </dl>
          
          <p>
            <a href="../../../images/addons/template_structure.png">
              <img src="../../../images/addons/template_structure_thumbnail.png" alt="Template repository structure" />
            </a>
          </p>
          
          <p>
            The template itself describes a plugin-cluster, a set of plugins
            that work together.  The top node ("a0d592bd-368c-46da-803" in the
            screenshot) describes the configuration for a ListViewPlugin.  We
            will replace this plugin with the custom layout plugin:
          </p>
          <dl>
            <dt>plugin.class</dt>
            <dd>
              change the value to <code>fancy.FancyDocument</code>.
            </dd>
            <dt>item</dt>
            <dd>
              remove this property
            </dd>
            <dt>wicket.extensions</dt>
            <dd>
              Create a multi-valued string property with values
              "extension.body", "extension.title", "extension.bool".
            </dd>
            <dt>"extension.body", "extension.title", "extension.bool"</dt>
            <dd>
              Create properties with these names and give them the values
              "${cluster.id}.body", "${cluster.id}.title" and
              "${cluster.id}.bool" respectively.
            </dd>
            <dt>other plugins</dt>
            <dd>
              For the other plugins in the cluster, replace their "wicket.id"
              values with the relevant "${cluster.id}.xxx" service name.
            </dd>
          </dl>
        </subsection>

        <subsection name="Share and enjoy">
          <p>
            You can now export the template (see the <a
            href="../../web/add-ons/howto/editing_template.html">Create an editing template addon</a>
            tutorial).  Build the project with Maven and you're all set!
          </p>
          <p>
            TODO: include screenshot
          </p>
        </subsection>

      </section>

    </body>
</document>
