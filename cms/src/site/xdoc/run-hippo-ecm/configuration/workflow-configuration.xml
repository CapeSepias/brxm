<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC
  "-//Apache Software Foundation//DTD XDOC 1.0//EN"
  "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<!--
  Copyright 2007 Hippo
  
  Licensed under the Apache License, Version 2.0 (the  "License"); 
  you may not use this file except in compliance with the License. 
  You may obtain a copy of the License at
  
  http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" 
  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
  See the License for the specific language governing permissions and 
  limitations under the License.
-->
<document>
  <properties>
    <title>Workflow configuration</title>
  </properties>
<body>

<section name="Workflow configuration">

<p>
Workflows are configured by specifying how the workflow can be accessed and
the workflow workflow is applicable.  This definition is stored in the
repository itself.
</p>

<p>
All available workflows are stored in the JCR repository in the tree
<code>/configuration/hippo:workflows</code>.  Workflow definitions are not
directly stored at this level, instead workflows are categorized.  At the
structure /configuration/hippo:workflows the workflow categories are listed.
</p>

<p>
Within each category, a list of possible workflow definitions is present in an
orderable list.  For example the specification for a workflow named
<i>myworkflow</i> which is applicable for category <i>mycategory</i> is stored
in the JCR repository at the node starting with path
<code>/configuration/hippo:workflows/mycategory/myworkflow</code>.
</p>

<p>
The workflow specification entails:
</p>
<ul>
<li>The name of the workflow;</li>
<li>A small description of the workflow;</li>
<li>The node type for which JCR nodes this workflow is applicable;</li>
<li>The classname of the class that implements the workflow in the repository;</li>
<li>The classname of the class used to render the workflow access in front-end applications;</li>
<li>A hierarchical specification of any subclasses indirectly referenced by the workflow.
  For each of these classes used in the workflow you must define:
  <ul>
  <li>The classname of the class used in the workflow;</li>
  <li>The JCR nodetype that is used to map data from the repository to the object for this class;</li>
  <li>A small description of this classname.</li>
  </ul></li>
</ul>

<p>
These are specified as properties and child nodes of the workflow node.  In
general the above settings are shipped with a workflow implementation.  This
means that you should just add the definition shipped with a workflow at the location
</p>

<source>
/configuration/hippo:workflows/workflowPlugin
</source>

<p>
Only a single category at this time, with the name <code>workflowPlugin</code>
is in use by the front-end application at this time.
Note the category name <code>workflowPlugin</code> should be changed before
M3.
</p>

<p>
If the workflow settings information is delivered by the addon in the file
<code>workflow-config.xml</code> you can use the following snippet in your
<code>configuration.xml</code> to let the bootstrap procedure load the new
workflow defined in workflow-config.xml.
</p>

<source>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;sv:node xmlns:sv="http://www.jcp.org/jcr/sv/1.0"
         xmlns:nt="http://www.jcp.org/jcr/nt/1.0"
         xmlns:jcr="http://www.jcp.org/jcr/1.0"
         xmlns:rep="internal"
         xmlns:fn_old="http://www.w3.org/2004/10/xpath-functions"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:mix="http://www.jcp.org/jcr/mix/1.0"
         xmlns:hippo="http://www.hippoecm.org/nt/1.0"
         xmlns:fn="http://www.w3.org/2005/xpath-functions"
         sv:name="configuration"&gt;
  &lt;sv:property sv:name="jcr:primaryType" sv:type="Name"&gt;
    &lt;sv:value&gt;hippo:configuration&lt;/sv:value&gt;
  &lt;/sv:property&gt;

  &lt;sv:node sv:name="hippo:documents"&gt;
    &lt;sv:property sv:name="jcr:primaryType" sv:type="Name"&gt;
      &lt;sv:value&gt;hippo:queryfolder&lt;/sv:value&gt;
    &lt;/sv:property&gt;
  &lt;/sv:node&gt;
  &lt;sv:node sv:name="hippo:workflows"&gt;
    &lt;sv:property sv:name="jcr:primaryType" sv:type="Name"&gt;
      &lt;sv:value&gt;hippo:workflowfolder&lt;/sv:value&gt;
    &lt;/sv:property&gt;
  &lt;/sv:node&gt;

  &lt;sv:node sv:name="hippo:initialize"&gt;
    &lt;sv:property sv:name="jcr:primaryType" sv:type="Name"&gt;
      &lt;sv:value&gt;hippo:initializefolder&lt;/sv:value&gt;
    &lt;/sv:property&gt;

    &lt;sv:node sv:name="workflows"&gt;
      &lt;sv:property sv:name="jcr:primaryType" sv:type="Name"&gt;
        &lt;sv:value&gt;hippo:initializeitem&lt;/sv:value&gt;
      &lt;/sv:property&gt;
      &lt;sv:property sv:name="hippo:content" sv:type="String"&gt;
        &lt;sv:value&gt;workflow-config.xml&lt;/sv:value&gt;
      &lt;/sv:property&gt;
      &lt;sv:property sv:name="hippo:contentroot" sv:type="String"&gt;
        &lt;sv:value&gt;/configuration&lt;/sv:value&gt;
      &lt;/sv:property&gt;
    &lt;/sv:node&gt;
  &lt;/sv:node&gt;
&lt;/sv:node&gt;
</source>

</section>

</body>
</document>
